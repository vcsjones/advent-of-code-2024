IDENTIFICATION DIVISION. *> Compile and run with cobc -std=cobol2014 --free -x day1.cbl -j
PROGRAM-ID. DAY2.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT DAY2DATA ASSIGN TO INPUT
    ORGANIZATION IS LINE SEQUENTIAL.

DATA DIVISION.
FILE SECTION.
FD DAY2DATA.
    01 ENTRY PIC X(90).

WORKING-STORAGE SECTION.
    77 WS-EOF PIC A VALUE 'N'.
        88 WS-DONE VALUE 'Y'.
    01 WS-DIGIT-LEN PIC 9(9).
    01 WS-WORKSPACE PIC X(90).
    01 WS-DIGIT PIC 9(9).
    01 WS-PREVIOUS-DIGIT PIC 9(9).
    01 WS-DELTA PIC 9(9).
    01 WS-I PIC 9(9).
    01 WS-DIRECTION PIC X.
        88 WS-DIRECTION-UNKNOWN VALUE 'U'.
        88 WS-DIRECTION-ASC VALUE 'A'.
        88 WS-DIRECTION-DESC VALUE 'D'.
    01 WS-VALID PIC X VALUE 'Y'.
        88 WS-VALID-INVALID VALUE 'N'.
        88 WS-VALID-VALID VALUE 'Y'.
    01 WS-TOTAL-VALID PIC 9(9) VALUE ZEROS.


PROCEDURE DIVISION.
MAIN-PARA.
    OPEN INPUT DAY2DATA
    PERFORM UNTIL WS-DONE
        READ DAY2DATA
        AT END SET WS-DONE TO TRUE
        NOT AT END
        PERFORM IS-VALID-PARA
        IF WS-VALID-VALID
            ADD 1 TO WS-TOTAL-VALID
        END-IF
    END-PERFORM
    CLOSE DAY2DATA
    DISPLAY "PART 1: " WS-TOTAL-VALID
    STOP RUN.
IS-VALID-PARA.
    SET WS-VALID-VALID TO TRUE
    MOVE ZEROS TO WS-PREVIOUS-DIGIT
    MOVE SPACES TO WS-WORKSPACE
    MOVE ENTRY TO WS-WORKSPACE
    MOVE ZEROS TO WS-I
    MOVE ZEROS TO WS-DELTA
    SET WS-DIRECTION-UNKNOWN TO TRUE

    PERFORM WITH TEST AFTER UNTIL WS-DIGIT-LEN IS EQUAL TO 0 OR WS-VALID-INVALID
        MOVE ZEROS TO WS-DIGIT-LEN
        MOVE ZEROS TO WS-DIGIT
        INSPECT WS-WORKSPACE TALLYING WS-DIGIT-LEN FOR CHARACTERS BEFORE SPACE

        IF WS-DIGIT-LEN IS NOT EQUAL TO ZERO
            MOVE WS-WORKSPACE(1:WS-DIGIT-LEN) TO WS-DIGIT
            MOVE WS-WORKSPACE(WS-DIGIT-LEN + 2:) TO WS-WORKSPACE

            IF WS-I IS NOT EQUAL TO ZERO
                SUBTRACT WS-PREVIOUS-DIGIT FROM WS-DIGIT GIVING WS-DELTA
            END-IF

            IF WS-DELTA IS GREATER THAN 3 OR (WS-DELTA IS ZERO AND WS-I IS GREATER THAN ZERO)
                SET WS-VALID-INVALID TO TRUE
            END-IF

            IF WS-DIGIT IS LESS THAN WS-PREVIOUS-DIGIT AND WS-DIRECTION-ASC
                SET WS-VALID-INVALID TO TRUE
            END-IF

            IF WS-DIGIT IS GREATER THAN WS-PREVIOUS-DIGIT AND WS-DIRECTION-DESC
                SET WS-VALID-INVALID TO TRUE
            END-IF


            IF WS-DIRECTION-UNKNOWN AND WS-I IS GREATER THAN ZERO
                IF WS-DIGIT IS LESS THAN WS-PREVIOUS-DIGIT
                    SET WS-DIRECTION-DESC TO TRUE
                END-IF
                IF WS-DIGIT IS GREATER THAN WS-PREVIOUS-DIGIT
                    SET WS-DIRECTION-ASC TO TRUE
                END-IF
            END-IF

            MOVE WS-DIGIT TO WS-PREVIOUS-DIGIT
            ADD 1 TO WS-I
        END-IF
    END-PERFORM.
